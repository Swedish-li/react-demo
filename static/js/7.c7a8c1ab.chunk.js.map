{"version":3,"sources":["components/Toggle.tsx","view/Home.tsx"],"names":["ToggleWrapper","styled","div","props","width","height","theme","primary","backgroundColor","color","Toggle","useContext","AppThemeContext","toggleTheme","type","name","id","onClick","defaultChecked","htmlFor","StyledLink","Link","Home","useEffect","init","to"],"mappings":"0LASMA,EAAgBC,IAAOC,IAAV,w0BAON,SAACC,GAAD,OAAWA,EAAMC,SAChB,SAACD,GAAD,OAAWA,EAAME,UAEP,qBAAGC,MAAkBC,QAAQC,mBAKxB,qBAAGF,MAAkBC,QAAQE,SAa5C,qBAAGH,MAAkBC,QAAQE,SAUnB,qBAAGH,MAAkBC,QAAQE,SAQxCC,EAAS,WAAO,IAAD,EACKC,qBAAWC,KAAlCN,EADkB,EAClBA,MAAOO,EADW,EACXA,YACf,OACE,eAACb,EAAD,CAAeI,MAAM,OAAOC,OAAO,SAAnC,UACE,uBACES,KAAK,WACLC,KAAK,SACLC,GAAG,SACHC,QAASJ,EACTK,eAA0B,SAAVZ,IAElB,uBAAOa,QAAQ,eC3DfC,EAAanB,YAAOoB,IAAPpB,CAAH,iEACL,qBAAGK,MAAkBC,QAAQE,SA0BzBa,UAtBF,WAIX,OAHAC,qBAAU,WACRC,iBAGA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,+BACE,6BACE,cAACJ,EAAD,CAAYK,GAAG,WAAf,uBAEF,6BACE,cAACL,EAAD,CAAYK,GAAG,QAAf,oBAEF,6BACE,cAACL,EAAD,CAAYK,GAAG,UAAf","file":"static/js/7.c7a8c1ab.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppThemeContext } from \"../theme\";\n\ninterface WrapperProps {\n  width: string;\n  height: string;\n}\n\nconst ToggleWrapper = styled.div<WrapperProps>`\n  input[type=\"checkbox\"] {\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n  label {\n    width: ${(props) => props.width};\n    height: ${(props) => props.height};\n    display: block;\n    background-color: ${({ theme }) => theme.primary.backgroundColor};\n    border-radius: 0.9rem;\n    position: relative;\n    cursor: pointer;\n    transition: 0.5s;\n    box-shadow: 0 0 0.2rem ${({ theme }) => theme.primary.color};\n  }\n\n  label::after {\n    content: \"\";\n    width: 2rem;\n    height: 2rem;\n    background-color: #fff;\n    position: absolute;\n    border-radius: 50%;\n    top: -0.1rem;\n    left: 0.1rem;\n    transition: 0.5s;\n    border: ${({ theme }) => theme.primary.color} solid 2px;\n    box-sizing: border-box;\n  }\n\n  input:checked + label:after {\n    left: calc(100% - 2px);\n    transform: translateX(-100%);\n  }\n\n  input:checked + label {\n    background-color: ${({ theme }) => theme.primary.color};\n  }\n\n  label:active:after {\n    width: 1rem;\n  }\n`;\n\nexport const Toggle = () => {\n  const { theme, toggleTheme } = useContext(AppThemeContext);\n  return (\n    <ToggleWrapper width=\"3rem\" height=\"1.8rem\">\n      <input\n        type=\"checkbox\"\n        name=\"switch\"\n        id=\"switch\"\n        onClick={toggleTheme}\n        defaultChecked={theme === \"dark\"}\n      />\n      <label htmlFor=\"switch\"></label>\n    </ToggleWrapper>\n  );\n};\n","import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { init } from \"../App\";\nimport { Container } from \"../components\";\nimport { Toggle } from \"../components/Toggle\";\n\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.primary.color};\n  font-weight: bold;\n`;\n\nconst Home = () => {\n  useEffect(() => {\n    init();\n  });\n  return (\n    <Container>\n      <Toggle />\n      <ul>\n        <li>\n          <StyledLink to=\"/counter\">Counter</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/intl\">i18n</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/formik\">Formik</StyledLink>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}