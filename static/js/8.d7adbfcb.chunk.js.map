{"version":3,"sources":["view/formik/index.tsx"],"names":["inputFontSize","EMAIL_REGEX","FormGroup","styled","div","SignupForm","form","ErrorMessage","FormikForm","formik","useFormik","initialValues","firstName","lastName","email","validate","values","errors","length","test","onSubmit","alert","JSON","stringify","handleSubmit","htmlFor","type","id","getFieldProps","touched"],"mappings":"6KAIMA,EAAgB,OAEhBC,EAAc,4CAEdC,EAAYC,IAAOC,IAAV,6PAWEJ,GAKXK,EAAaF,IAAOG,KAAV,oLAOCN,GAIXO,EAAeJ,IAAOC,IAAV,4DA+EHI,UAtEI,WACjB,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,MAAO,IAETC,SAAU,SAACC,GACT,IAAMC,EAAsC,GAgB5C,OAfKD,EAAOJ,UAEDI,EAAOJ,UAAUM,OAAS,KACnCD,EAAOL,UAAY,iCAFnBK,EAAOL,UAAY,WAIhBI,EAAOH,SAEDG,EAAOH,SAASK,OAAS,KAClCD,EAAOJ,SAAW,iCAFlBI,EAAOJ,SAAW,WAIfG,EAAOF,MAEAb,EAAYkB,KAAKH,EAAOF,SAClCG,EAAOH,MAAQ,yBAFfG,EAAOH,MAAQ,WAIVG,GAETG,SAAU,SAACJ,GACTK,MAAMC,KAAKC,UAAUP,EAAQ,KAAM,OAIvC,OACE,eAAC,IAAD,WACE,kDACA,eAACX,EAAD,CAAYe,SAAUX,EAAOe,aAA7B,UACE,eAACtB,EAAD,WACE,uBAAOuB,QAAQ,YAAf,wBACA,mCACEC,KAAK,OACLC,GAAG,aACClB,EAAOmB,cAAc,kBAG5BnB,EAAOoB,QAAQjB,WAAaH,EAAOQ,OAAOL,UACzC,cAACL,EAAD,UAAeE,EAAOQ,OAAOL,YAC3B,KACJ,eAACV,EAAD,WACE,uBAAOuB,QAAQ,WAAf,uBACA,mCACEC,KAAK,OACLC,GAAG,YACClB,EAAOmB,cAAc,iBAG5BnB,EAAOoB,QAAQhB,UAAYJ,EAAOQ,OAAOJ,SACxC,cAACN,EAAD,UAAeE,EAAOQ,OAAOJ,WAC3B,KACJ,eAACX,EAAD,WACE,uBAAOuB,QAAQ,QAAf,2BACA,mCAAOC,KAAK,QAAQC,GAAG,SAAYlB,EAAOmB,cAAc,cAEzDnB,EAAOoB,QAAQf,OAASL,EAAOQ,OAAOH,MACrC,cAACP,EAAD,UAAeE,EAAOQ,OAAOH,QAC3B,KACJ,wBAAQY,KAAK,SAAb","file":"static/js/8.d7adbfcb.chunk.js","sourcesContent":["import { useFormik } from \"formik\";\nimport styled from \"styled-components\";\nimport { Container } from \"../../components\";\n\nconst inputFontSize = \"20px\";\n\nconst EMAIL_REGEX = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nconst FormGroup = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-top: 10px;\n  label {\n    width: 35%;\n    text-align: right;\n  }\n  input {\n    width: 50%;\n    font-size: ${inputFontSize};\n    padding-left: 10px;\n  }\n`;\n\nconst SignupForm = styled.form`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  button[type=\"submit\"] {\n    width: 50%;\n    margin: 1em auto;\n    font-size: ${inputFontSize};\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n  margin: auto;\n`;\n\ntype PartialValue<T> = {\n  [P in keyof T]?: string;\n};\n\nconst FormikForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n    },\n    validate: (values) => {\n      const errors: PartialValue<typeof values> = {};\n      if (!values.firstName) {\n        errors.firstName = \"Required\";\n      } else if (values.firstName.length > 15) {\n        errors.firstName = \"Must be 15 characters or less\";\n      }\n      if (!values.lastName) {\n        errors.lastName = \"Required\";\n      } else if (values.lastName.length > 20) {\n        errors.lastName = \"Must be 20 characters or less\";\n      }\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (!EMAIL_REGEX.test(values.email)) {\n        errors.email = \"Invalid email address\";\n      }\n      return errors;\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <Container>\n      <h1>Formik Form Demo</h1>\n      <SignupForm onSubmit={formik.handleSubmit}>\n        <FormGroup>\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            {...formik.getFieldProps(\"firstName\")}\n          />\n        </FormGroup>\n        {formik.touched.firstName && formik.errors.firstName ? (\n          <ErrorMessage>{formik.errors.firstName}</ErrorMessage>\n        ) : null}\n        <FormGroup>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            {...formik.getFieldProps(\"lastName\")}\n          />\n        </FormGroup>\n        {formik.touched.lastName && formik.errors.lastName ? (\n          <ErrorMessage>{formik.errors.lastName}</ErrorMessage>\n        ) : null}\n        <FormGroup>\n          <label htmlFor=\"email\">Email Address</label>\n          <input type=\"email\" id=\"email\" {...formik.getFieldProps(\"email\")} />\n        </FormGroup>\n        {formik.touched.email && formik.errors.email ? (\n          <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        ) : null}\n        <button type=\"submit\">Submit</button>\n      </SignupForm>\n    </Container>\n  );\n};\n\nexport default FormikForm;\n"],"sourceRoot":""}