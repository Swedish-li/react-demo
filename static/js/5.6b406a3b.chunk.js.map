{"version":3,"sources":["features/counter/Counter.module.css","app/hooks.ts","features/counter/Counter.tsx","logo.svg","view/counter/index.tsx"],"names":["module","exports","useAppSelector","useSelector","Counter","count","selectCount","dispatch","useDispatch","useState","incrementAmount","setIncrementAmount","incrementValue","Number","className","styles","row","button","aria-label","onClick","decrement","value","increment","textbox","onChange","e","target","incrementByAmount","asyncButton","incrementAsync","incrementIfOdd","CounterApp","styled","div","CounterAppHeader","header","logoFloat","keyframes","Logo","img","CounterView","src","logo","alt"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,qD,gFCIjJC,EAAkDC,I,gCCQxD,SAASC,IACd,IAAMC,EAAQH,EAAeI,KACvBC,EDX4BC,cCSV,EAGsBC,mBAAS,KAH/B,mBAGjBC,EAHiB,KAGAC,EAHA,KAKlBC,EAAiBC,OAAOH,IAAoB,EAElD,OACE,gCACE,sBAAKI,UAAWC,IAAOC,IAAvB,UACE,wBACEF,UAAWC,IAAOE,OAClBC,aAAW,kBACXC,QAAS,kBAAMZ,EAASa,gBAH1B,eAOA,sBAAMN,UAAWC,IAAOM,MAAxB,SAAgChB,IAChC,wBACES,UAAWC,IAAOE,OAClBC,aAAW,kBACXC,QAAS,kBAAMZ,EAASe,gBAH1B,kBAQF,sBAAKR,UAAWC,IAAOC,IAAvB,UACE,uBACEF,UAAWC,IAAOQ,QAClBL,aAAW,uBACXG,MAAOX,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAmBc,EAAEC,OAAOL,UAE/C,wBACEP,UAAWC,IAAOE,OAClBE,QAAS,kBAAMZ,EAASoB,YAAkBf,KAF5C,wBAMA,wBACEE,UAAWC,IAAOa,YAClBT,QAAS,kBAAMZ,EAASsB,YAAejB,KAFzC,uBAMA,wBACEE,UAAWC,IAAOE,OAClBE,QAAS,kBAAMZ,EAASuB,YAAelB,KAFzC,8BC1DO,I,QAAA,MAA0B,iCCInCmB,EAAaC,IAAOC,IAAV,qLASVC,EAAmBF,IAAOG,OAAV,+CAGhBC,EAAYC,YAAH,wKAWTC,EAAON,IAAOO,IAAV,kJAGOH,GAeFI,UAXK,WAClB,OACE,eAACT,EAAD,WACE,cAACG,EAAD,UACE,cAACI,EAAD,CAAMG,IAAKC,EAAMC,IAAI,WAEvB,cAACvC,EAAD","file":"static/js/5.6b406a3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from \"./counterSlice\";\nimport styles from \"./Counter.module.css\";\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import styled, { keyframes } from \"styled-components\";\nimport { Counter } from \"../../features/counter/Counter\";\nimport logo from \"../../logo.svg\";\n\nconst CounterApp = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n`;\n\nconst CounterAppHeader = styled.header`\n  height: 40vmin;\n`;\nconst logoFloat = keyframes`\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(10px);\n  }\n  100% {\n    transform: translateY(0px);\n  }\n`;\nconst Logo = styled.img`\n  height: 100%;\n  @media (prefers-reduced-motion: no-preference) {\n    animation: ${logoFloat} infinite 3s ease-in-out;\n  }\n`;\n\nconst CounterView = () => {\n  return (\n    <CounterApp>\n      <CounterAppHeader>\n        <Logo src={logo} alt=\"logo\" />\n      </CounterAppHeader>\n      <Counter />\n    </CounterApp>\n  );\n};\n\nexport default CounterView;\n"],"sourceRoot":""}